---
const { title } = Astro.props;
const { subtitle } = Astro.props;
const { height } = Astro.props;
---

<div class={`background ${height}`}>
  <div class="overlay">
    <div class="gallery-fade gallery-fade-left"></div>
    <div class="gallery-fade gallery-fade-right"></div>
    <div class="center">
      <div class="text">
        <h2>{title}</h2>
        <p>{subtitle}</p>
      </div>
      <div class="flex" id="product-flex">
        <slot />
      </div>
      <div class="scroll-progress-bar">
        <div class="scroll-progress" id="scroll-progress"></div>
      </div>
    </div>
  </div>
</div>

<style>
  .background {
    background: url(../assets/producent_background.webp);
    background-size: contain;
    width: 100%;
    background-size: cover;
    position: relative;
  }

  .height_product {
    height: 950px;
  }

  .height_event {
    height: 1300px;
  }

  @media screen and (min-width: 800px) {
    .height_product {
      height: 1100px;
    }

    .height_event {
      height: 1500px;
    }
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(245, 245, 220, 0.8);
    z-index: 1;
  }

  .center {
    align-content: center;
    padding-top: 50px;
  }

  .text {
    padding-block: 2rem;
    padding-inline: 2rem;
    max-width: 1200px;
    margin-inline: auto;
  }
  p {
    padding-bottom: 40px;
  }
  .flex {
    position: relative;
    display: flex;
    flex-direction: row;
    gap: 30px;
    overflow-x: scroll;
    overflow-y: hidden;
    padding-bottom: 10px;
    scrollbar-width: none;
    padding-inline: 2rem;
  }

  .gallery-fade {
    position: absolute;
    z-index: 1000;
    top: 0;
    bottom: 0;
    width: 25px;
    pointer-events: none;
  }
  .gallery-fade-left {
    left: 0;
    background: linear-gradient(to right, var(--color-bg-beige) 0%, transparent 100%);
  }
  .gallery-fade-right {
    right: 0;
    background: linear-gradient(to left, var(--color-bg-beige) 0%, transparent 100%);
  }
  .scroll-progress-bar {
    width: 80%;
    height: 6px;
    background: #f5f5dc;
    border-radius: 3px;
    margin-top: 8px;
    overflow: hidden;
    margin-inline: auto;
  }
  .scroll-progress {
    height: 100%;
    width: 0%;
    background: var(--color-red-light);
    transition: width 0.2s;
    border-radius: 3px;
  }

  @media screen and (min-width: 1000px) {
    .center {
      max-width: 100%;
      margin: auto;
      width: 100%;
    }

    .flex {
      padding-inline: 2rem;
    }
  }
</style>

<script>
  if (typeof window !== "undefined") {
    const flex = document.getElementById("product-flex");
    const progress = document.getElementById("scroll-progress");
    if (flex && progress) {
      const updateProgress = () => {
        const maxScroll = flex.scrollWidth - flex.clientWidth;
        const percent = maxScroll > 0 ? (flex.scrollLeft / maxScroll) * 100 : 0;
        progress.style.width = percent + "%";
      };
      flex.addEventListener("scroll", updateProgress);
      window.addEventListener("resize", updateProgress);
      // Initialize on load
      updateProgress();
    }
  }
</script>
